name: CI/CD Pipeline for Tutorial Site

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.x'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies - Frontend
      run: |
        cd frontend
        npm ci
        
    - name: Install dependencies - Backend
      run: |
        cd backend
        npm ci
        
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm test
        
    - name: Run Backend Tests
      run: |
        cd backend
        npm test
        
    - name: Run Integration Tests
      run: |
        cd tests
        npm ci
        npm run test:integration

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd frontend && npm ci
        cd ../backend && npm ci
        
    - name: Run ESLint - Frontend
      run: |
        cd frontend
        npm run lint
        
    - name: Run ESLint - Backend
      run: |
        cd backend
        npm run lint

  accessibility:
    name: Accessibility Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install axe-core
      run: npm install -g @axe-core/cli
      
    - name: Build Frontend
      run: |
        cd frontend
        npm ci
        npm run build
        
    - name: Run Accessibility Tests
      run: |
        cd frontend
        npm run serve &
        sleep 10
        axe http://localhost:3000 --exit

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Build Frontend
      run: |
        cd frontend
        npm ci
        npm run build
        
    - name: Build Backend
      run: |
        cd backend
        npm ci
        npm run build
        
    - name: Generate Build Hash
      run: |
        echo "BUILD_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ env.BUILD_HASH }}
        path: |
          frontend/dist/
          backend/dist/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run npm audit - Frontend
      run: |
        cd frontend
        npm audit --audit-level=high
        
    - name: Run npm audit - Backend
      run: |
        cd backend
        npm audit --audit-level=high